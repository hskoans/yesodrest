PORT=3000
PORT_IN_USE="$(netstat -anp tcp | grep ".$PORT")"
SANDBOX="`pwd`/.cabal-sandbox"
SANDBOX_BIN="$SANDBOX/bin"

if [[ -z "$CABAL_ENV" ]]; then
    # Set PATH
    export PATH=$SANDBOX_BIN:$PATH
    export CABAL_ENV=${PWD##*/}
    export CABAL_SANDBOX_CONFIG="`pwd`/cabal.sandbox.config"
    export PKG_DB="`pwd`/$(ls -d .cabal-sandbox/*packages.conf.d)"
    export PROMPT="[cabal: "$CABAL_ENV"] "$PROMPT
    alias runhaskell="`which runhaskell` -package-db=$PKG_DB"
fi

# If port is in use, we will not run the rest of the commands
if [[ ! -z "$PORT_IN_USE" ]]; then
    export PATH=$SANDBOX_BIN:$PATH
    return $?
fi

if [ ! -e cabal.config ]; then
    wget https://www.stackage.org/lts/cabal.config
fi
cabal update
# Do other stuff if cabal update gives us a message

# Prepare sandbox and build tools
if [[ ! -d "$SANDBOX" ]]; then
    cabal sandbox init
fi


# Set up build tools if they don't exist
if [[ ! -f "$SANDBOX_BIN/yesod" ]]; then
    cabal install yesod-bin
fi

if [[ ! -f "$SANDBOX_BIN/alex" ]]; then
    cabal install alex
fi

if [[ ! -f "$SANDBOX_BIN/happy" ]]; then
    cabal install happy
fi

# Initialize yesod project and answer questions
stat -t *.cabal >/dev/null 2>&1 && project_cabal=1 || project_cabal=0
if [[ $project_cabal == 0 ]]; then
    yesod init --bare
fi

## Install libraries
cabal install -j --enable-tests --max-backjumps=-1 --reorder-goals

## Run devel server if port is not in use
if [[ -z "$PORT_IN_USE" ]]; then
    yesod devel
fi
